#!/bin/sh
#
# shield-trigger-iptables
#
# Copyright (C) 2007-2024
# Walter de Jong <walter@heiho.net>
# Jonathan Niehof <jtniehof@gmail.com>
# Jeffrey Clark <h0tw1r3@gmail.com>
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

run_iptables() {
    IPT="iptables"
    [ "${2#*:}" != "$2" ] && IPT="ip6tables"

    # switch -A for iptables to -I
    TASK=$1
    [ "$1" = "-A" ] && TASK="-I"

    # check to see if pam_shield chain exists and create if necessary
    if [ -z "$($IPT -L pam_shield 2>/dev/null)" ] ; then
        "$IPT" -N pam_shield
        "$IPT" -I pam_shield -j DROP
        [ "$TASK" = "-D" ] && return
    fi

    # CUSTOMIZE THIS RULE if you want to
    #
    # $TASK is the iptables command: -A/-I or -D
    # $2 is the IP number
    #
    # * put in the correct chain name (pam_shield or INPUT)
    # * put in the correct network interface name (e.g. -i eth0)
    #   Currently blocks on all interfaces
    # * put in a port number (e.g.--destination-port 22 for ssh only) 
    #   Currently blocks all ports
    # * add additional rules for additional services as needed

    if ! "$IPT" "$TASK" INPUT -p tcp -s "$2" -j pam_shield ; then
        [ "$TASK" = "-C" ] && run_iptables "-I" "$2"
    fi
}

### usually no editing is needed beyond this point ###

log() {
    logger -i -t shield-trigger -p authpriv.info "$*"
}

usage() {
    echo "shield-trigger-iptables"
    echo "usage: ${0##*/} [add|del|sync] <IP number>"
    echo
    echo "shield-trigger-iptables is normally called by the pam_shield PAM module"
    exit 1
}

PATH=/sbin:/usr/sbin:/bin:/usr/bin

[ -z "$2" ] && usage

case "$1" in
    add)
        log "blocking $2"
        CMD="-A"
        ;;

    del)
        log "unblocking $2"
        CMD="-D"
        ;;

    sync)
        log "sync $2"
        CMD="-C"
        ;;
    *)
        usage
        ;;
esac

run_iptables "$CMD" "$2"
